class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        //虚拟头结点
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        //删除倒数第n个，要先倒数第n + 1个节点
        ListNode x = findFromEnd(dummy,n + 1);
        //删除倒数第n个节点
        x.next = x.next.next;
        return dummy.next;

    }
    //找到单链表的倒数第k个节点
    private ListNode findFromEnd(ListNode head ,int k){
        ListNode p1 = head;
        //p1先走k步
        for(int i = 0; i < k; i++){
            p1 = p1.next;
        }
        ListNode p2 = head;
        //p1和p2同时走n-k步
        while(p1 != null){
            p2 = p2.next;
            p1 = p1.next;
            
        }
        //p2现在指向第n-k+1个节点，即倒数第k个节点
        return p2;
    }
}
